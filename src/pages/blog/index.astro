---
import { getCollection } from 'astro:content';
import Navigation from '../../components/Navigation.astro';
import ThemeScript from '../../components/ThemeScript.astro';
import '../../styles/global.css';

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <ThemeScript />
    <title>Blog Posts</title>
  </head>
  <body>
    <Navigation />

    <main>
      <div class="container">
        <h1>Blog Posts</h1>
        <div class="posts-grid">
          {
            posts.map((post) => (
              <article class="post-card">
                <a href={`/blog/${post.id}/`}>
                  {post.data.heroImage && (
                    <img src={post.data.heroImage} alt="" class="post-image" />
                  )}
                  <div class="post-content">
                    <h2 class="post-title">{post.data.title}</h2>
                    <p class="post-date">
                      {new Date(post.data.pubDate).toLocaleDateString('en-us', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric',
                      })}
                    </p>
                    <p class="post-description">{post.data.description}</p>
                  </div>
                </a>
              </article>
            ))
          }
        </div>
      </div>
    </main>
  </body><style>
    main {
      width: 100%;
      background: var(--bg-color);
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem 1rem;
    }

    h1 {
      font-size: 2.5rem;
      margin-bottom: 2rem;
      color: var(--text-color);
      text-align: center;
    }

    .posts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 2rem;
    }

    .post-card {
      background: var(--card-bg);
      border: 1px solid var(--border-color);
      border-radius: 8px;
      overflow: hidden;
      transition:
        transform 0.2s ease,
        box-shadow 0.2s ease,
        background-color 0.3s ease;
    }

    .post-card:hover {
      transform: translateY(-4px);
      box-shadow: 0 4px 8px var(--shadow-color);
    }

    .post-card a {
      text-decoration: none;
      color: inherit;
    }

    .post-image {
      width: 100%;
      height: 200px;
      object-fit: contain;
      background: var(--card-bg);
      padding: 1rem;
    }

    .post-content {
      padding: 1.5rem;
    }

    .post-title {
      margin: 0 0 0.5rem 0;
      font-size: 1.5rem;
      color: var(--text-color);
      line-height: 1.3;
    }

    .post-date {
      color: var(--text-muted);
      font-size: 0.9rem;
      margin: 0.5rem 0;
    }

    .post-description {
      color: var(--text-color);
      margin: 0.5rem 0 0;
      line-height: 1.6;
      font-size: 1.1rem;
      opacity: 0.9;
    }

    @media (max-width: 768px) {
      .posts-grid {
        grid-template-columns: 1fr;
      }

      h1 {
        font-size: 2rem;
      }

      .container {
        padding: 1rem;
      }
    }
  </style>
</html>
